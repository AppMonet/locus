@title locus
@doc

<a target="_parent" href="https://hex.pm/packages/locus" alt="Hex.pm Package">
    <img src="https://img.shields.io/hexpm/v/locus.svg?style=flat"/></a>
<a target="_parent" href="https://travis-ci.org/g-andrade/locus" alt="Build Status">
    <img src="https://travis-ci.org/g-andrade/locus.png?branch=master"/></a>

== locus - Geolocation and ASN lookup of IP addresses using MaxMind GeoIP2 ==

`locus' is library for Erlang/OTP and Elixir that allows you to pinpoint the country,
city or ASN of IPv4 and IPv6 addresses.

The free <a target="_parent" href="https://dev.maxmind.com/geoip/geoip2/geolite2/">MaxMind databases</a> you choose
are downloaded on-demand, cached on the filesystem (when loaded using HTTP) and updated automatically.

You're encouraged to host your own private copies of the databases when using this library in production,
both for reliability and netiquette towards MaxMind.

=== Usage ===

Clone the repository and run `make console' to bring up a shell.

==== 1. Start the database loader ====

<pre lang="erlang"  class="erlang">
URL = "https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz",
ok = locus:start_loader(country, URL).
</pre>

==== 2. Wait for the database to load (optional) ====

<pre lang="erlang" class="erlang">
% Either block indefinitely
{ok, _DatabaseVersion} = locus:wait_for_loader(country).
</pre>

<pre lang="erlang" class="erlang">
% ... or give-up after 30 seconds
{ok, _DatabaseVersion} = locus:wait_for_loader(country, 30000). % {error,timeout}
</pre>

==== 3. Lookup IP addresses ====

<pre lang="erlang" class="erlang">
<![CDATA[
% > locus:lookup(country, "93.184.216.34").
% > locus:lookup(country, "2606:2800:220:1:248:1893:25c8:1946").

{ok,#{prefix => {{93,184,216,0},24},
      <<"continent">> =>
          #{<<"code">> => <<"NA">>,
            <<"geoname_id">> => 6255149,
            <<"names">> =>
                #{<<"de">> => <<"Nordamerika">>,
                  <<"en">> => <<"North America">>,
                  <<"es">> => <<"Norteamérica"/utf8>>,
                  <<"fr">> => <<"Amérique du Nord"/utf8>>,
                  <<"ja">> => <<"北アメリカ"/utf8>>,
                  <<"pt-BR">> => <<"América do Norte"/utf8>>,
                  <<"ru">> => <<"Северная Америка"/utf8>>,
                  <<"zh-CN">> => <<"北美洲"/utf8>>}},
      <<"country">> =>
          #{<<"geoname_id">> => 6252001,
            <<"iso_code">> => <<"US">>,
            <<"names">> =>
                #{<<"de">> => <<"USA">>,
                  <<"en">> => <<"United States">>,
                  <<"es">> => <<"Estados Unidos">>,
                  <<"fr">> => <<"États-Unis"/utf8>>,
                  <<"ja">> => <<"アメリカ合衆国"/utf8>>,
                  <<"pt-BR">> => <<"Estados Unidos">>,
                  <<"ru">> => <<"США"/utf8>>,
                  <<"zh-CN">> => <<"美国"/utf8>>}},
      <<"registered_country">> =>
          #{<<"geoname_id">> => 6252001,
            <<"iso_code">> => <<"US">>,
            <<"names">> =>
                #{<<"de">> => <<"USA">>,
                  <<"en">> => <<"United States">>,
                  <<"es">> => <<"Estados Unidos">>,
                  <<"fr">> => <<"États-Unis"/utf8>>,
                  <<"ja">> => <<"アメリカ合衆国"/utf8>>,
                  <<"pt-BR">> => <<"Estados Unidos">>,
                  <<"ru">> => <<"США"/utf8>>,
                  <<"zh-CN">> => <<"美国"/utf8>>}}}}
]]>
</pre>

=== Details ===

==== Requirements ====

<ul>
<li>Erlang/OTP 17.4 or higher</li>
<li>rebar3</li>
</ul>

==== Documentation ====

Documentation is hosted on <a target="_parent" href="https://hexdocs.pm/locus/">HexDocs</a>.

==== Databases ====

<ul>
<li>The free GeoLite2 <a target="_parent" href="https://dev.maxmind.com/geoip/geoip2/geolite2/">Country, City and ASN databases</a>
  were all successfully tested; presumably `locus' can deal with any MaxMind DB -formatted database that maps
  IP address prefixes to arbitrary data, but no <a target="_parent" href="https://dev.maxmind.com/geoip/geoip2/downloadable/">
  commercial databases</a> have yet been tested
  </li>
<li>The databases are loaded into memory (mostly) as-is; reference counted binaries are shared with the
  application callers using ETS tables, and the original binary search tree is used to lookup addresses.
  The data for each entry is decoded on the fly upon successful lookups.
  </li>
</ul>

==== Formats ====

<ul>
<li>Only gzip-compressed tarballs are supported at this moment</li>
<li>The first file to be found, within the tarball, with an .mmdb extension, is the one that's chosen for loading</li>
<li>The implementation of <a target="_parent" href="https://maxmind.github.io/MaxMind-DB/">MaxMind DB format</a> is mostly complete</li>
</ul>

==== Downloads and updates (HTTP URLs) ====

<ul>
<li>The downloaded tarballs are uncompressed in memory</li>
<li>The 'last-modified' response header, if present, is used to condition subsequent download
  attempts (using 'if-modified-since' request headers) in order to save bandwidth
  </li>
<li>The downloaded tarballs are cached on the filesystem in order to more quickly achieve readiness
  on future launches of the database loader
  </li>
<li>Until a HTTP database loader achieves readiness, download attempts are made every minute;
  once readiness is achieved (either from cache or network), this interval increases to every 6 hours
  </li>
</ul>

==== Caching (HTTP URLs) ====

<ul>
<li>Caching is a best-effort; the system falls back to relying exclusively on the network if needed</li>
<li>A caching directory named 'locus_erlang' is created under the <a target="_parent" href="http://erlang.org/doc/man/filename.html#basedir-3">'user_cache' basedir</a></li>
<li>Cached tarballs are named after the SHA256 hash of their source URL</li>
<li>Modification time of the tarballs is extracted from 'last-modified' response header (when present)
  and used to condition downloads on subsequent boots and save bandwidth
  </li>
<li>Caching can be disabled by specifying the `no_cache' option when running `:start_loader'</li>
</ul>

==== Loads and updates (filesystem URLs) ====

<ul>
<li>The loaded tarballs are uncompressed in memory</li>
<li>Until a filesystem database loader achieves readiness, load attempts are made every 5 seconds
  once readiness is achieved, this interval increases to every 30 seconds
  </li>
</ul>

==== Logging ====

<ul>
<li>Five logging levels are supported: `debug', `info', `warning', `error' and `none'</li>
<li>The backend is <a target="_parent" href="http://erlang.org/doc/man/error_logger.html">error_logger</a>; this usually plays nicely with `lager'</li>
<li>The default log level is `error'; it can be changed in the application's `env' config</li>
<li>To tweak the log level in runtime, use `locus_logger:set_loglevel/1'</li>
</ul>

==== Event subscription ====

<ul>
<li>Any number of event subscribers can be attached to a database loader by specifying the `{event_subscriber, Subscriber}'
  option when starting the database
  </li>
<li>A `Subscriber' can be either a module implementing the `locus_event_subscriber' behaviour or an arbitrary `pid()'</li>
<li>The format and content of reported events can be consulted in detail on the `locus_event_subscriber' module documentation;
  most key steps in the loader pipeline are reported (download started, download succeeded, download failed,
  caching succeeded, loading failed, etc.)
  </li>
</ul>

=== Alternatives (Erlang) ===

<ul>
<li><a target="_parent" href="https://github.com/mochi/egeoip">egeoip</a>: IP Geolocation module, currently supporting the MaxMind GeoLite City Database</li>
<li><a target="_parent" href="https://github.com/brigadier/geodata2">geodata2</a>: Application for working with MaxMind geoip2 (.mmdb) databases</li>
<li><a target="_parent" href="https://github.com/manifest/geoip">geoip</a>: Returns the location of an IP address; based on the ipinfodb.com web service</li>
<li><a target="_parent" href="https://hex.pm/packages/geolite2data">geolite2data</a>: Periodically fetches the free MaxMind GeoLite2 databases</li>
<li><a target="_parent" href="https://github.com/ip2location/ip2location-erlang">ip2location-erlang</a>: Uses IP2Location geolocation database</li>
</ul>

=== Alternatives (Elixir) ===

<ul>
<li><a target="_parent" href="https://hex.pm/packages/asn">asn</a>: IP-to-AS-to-ASname lookup</li>
<li><a target="_parent" href="https://hex.pm/packages/freegeoip">freegeoip</a>: Simple wrapper for freegeoip.net HTTP API</li>
<li><a target="_parent" href="https://hex.pm/packages/freegeoipx">freegeoipx</a>: API Client for freegeoip.net</li>
<li><a target="_parent" href="https://hex.pm/packages/geoip">geoip</a>: Lookup the geo location for a given IP address, hostname or Plug.Conn instance</li>
<li><a target="_parent" href="https://hex.pm/packages/geolix">geolix</a>: MaxMind GeoIP2 database reader/decoder</li>
<li><a target="_parent" href="https://hex.pm/packages/plug_geoip2">plug_geoip2</a>: Adds geo location to a Plug connection based upon the client IP address by using MaxMind's GeoIP2 database</li>
<li><a target="_parent" href="https://hex.pm/packages/tz_world">tz_world</a>: Resolve timezones from a location efficiently using PostGIS and Ecto</li>
</ul>

=== License ===

MIT License

Copyright (c) 2017-2018 Guilherme Andrade

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

`locus' is an independent project and has not been authorized, sponsored, or
otherwise approved by MaxMind.

`locus' includes code extracted from OTP source code, by Ericsson AB,
released under the Apache License 2.0.

@end
